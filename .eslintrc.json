{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "mocha": true
  },
  "parser": "babel-eslint",
  "plugins": [
    "react"
  ],
  "globals": {
    "__dirname": true
  },
  "extends": [
    "standard"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "rules": {
    // Allow dangling commas,
    "comma-dangle": "off",
    "indent": [
      "error",
      2,
      {
        // Handle conflict with react/jsx-indent-props
        "ignoredNodes": [
          "JSXAttribute",
          "JSXSpreadAttribute"
        ],
        // Indent `case` clauses in `switch` statements
        "SwitchCase": 1
      }
    ],
    // Props on multiple lines must be at the same indent as the first one
    "react/jsx-indent-props": [
      "error",
      "first"
    ],
    // Props all go on 1 line or if it is too long then 1 per line
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    // Require jsx props be alphabetical order
    "react/jsx-sort-props": [
      "error"
    ],
    // Prevents false no-unused-vars flag for jsx pragma
    "react/jsx-uses-react": "error",
    // Prevents false no-unused-vars flag for using component vars in jsx
    "react/jsx-uses-vars": "error",
    // Require semicolons
    "semi": [
      "error",
      "always"
    ],
    // Use `myFunction()` instead of `myFunction ()`
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ]
  },
  "settings": {
    "react": {
      // Matches the pragma in babel config
      "pragma": "h"
    }
  }
}
